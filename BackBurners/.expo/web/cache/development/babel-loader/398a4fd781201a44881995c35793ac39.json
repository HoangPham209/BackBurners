{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/bbridges11/Desktop/BackBurners/BackBurners/App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from \"./client/src/store/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { Navbar, Link, Landing, Login, SignUp, BudgetSetup } from \"./client/src\";\n\nfunction enablePushNotifs() {\n  var _await$Permissions$as, status;\n\n  return _regeneratorRuntime.async(function enablePushNotifs$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (Constants.isDevice) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n        case 4:\n          _await$Permissions$as = _context.sent;\n          status = _await$Permissions$as.status;\n\n          if (!(status !== 'granted')) {\n            _context.next = 8;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      pageLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.setState({\n                pageLoaded: true\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, this.state.pageLoaded ? React.createElement(AppNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, \"Loading.......\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar AuthenticationNavigator = createStackNavigator({\n  Landing: {\n    screen: Landing\n  },\n  Login: {\n    screen: Login\n  },\n  SignUp: {\n    screen: SignUp\n  },\n  Link: {\n    screen: Link\n  },\n  BudgetSetup: {\n    screen: BudgetSetup,\n    navigationOptions: function navigationOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerShown: false\n      };\n    }\n  }\n});\nvar AppNavigator2 = createSwitchNavigator({\n  Auth: {\n    screen: AuthenticationNavigator\n  },\n  Main: {\n    screen: Navbar\n  }\n});\nvar AppNavigator = createAppContainer(AppNavigator2);","map":{"version":3,"sources":["/Users/bbridges11/Desktop/BackBurners/BackBurners/App.js"],"names":["React","Component","Provider","store","Constants","Permissions","createAppContainer","createSwitchNavigator","createStackNavigator","Navbar","Link","Landing","Login","SignUp","BudgetSetup","enablePushNotifs","isDevice","askAsync","NOTIFICATIONS","status","App","state","pageLoaded","setState","color","AuthenticationNavigator","screen","navigationOptions","navigation","headerShown","AppNavigator2","Auth","Main","AppNavigator"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP;;;;;AAEA,OAAOC,SAAP,MAAuB,gBAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,kBAA1D;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,MAAvC,EAA+CC,WAA/C;;AAEA,SAAeC,gBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,cACOX,SAAS,CAACY,QADjB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,2CAIyBX,WAAW,CAACY,QAAZ,CAAqBZ,WAAW,CAACa,aAAjC,CAJzB;;AAAA;AAAA;AAIQC,UAAAA,MAJR,yBAIQA,MAJR;;AAAA,gBAMMA,MAAM,KAAK,SANjB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;IAWqBC,G;;;;;AACnB,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAFY;AAKb;;;;;;;;;AAKC,mBAAKC,QAAL,CAAc;AAAED,gBAAAA,UAAU,EAAE;AAAd,eAAd;;;;;;;;;;;6BAGO;AACP,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEnB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKkB,KAAL,CAAWC,UAAX,GACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAJF,CADF;AAWD;;;;EA1B8BvB,S;;SAAZmB,G;AA6BrB,IAAMK,uBAAuB,GAAGjB,oBAAoB,CAAC;AACnDG,EAAAA,OAAO,EAAE;AAAEe,IAAAA,MAAM,EAAEf;AAAV,GAD0C;AAEnDC,EAAAA,KAAK,EAAE;AAAEc,IAAAA,MAAM,EAAEd;AAAV,GAF4C;AAGnDC,EAAAA,MAAM,EAAE;AAAEa,IAAAA,MAAM,EAAEb;AAAV,GAH2C;AAInDH,EAAAA,IAAI,EAAE;AAAEgB,IAAAA,MAAM,EAAEhB;AAAV,GAJ6C;AAKnDI,EAAAA,WAAW,EAAE;AAAEY,IAAAA,MAAM,EAAEZ,WAAV;AAAuBa,IAAAA,iBAAiB,EAAE;AAAA,UAAGC,UAAH,QAAGA,UAAH;AAAA,aAAqB;AAC1EC,QAAAA,WAAW,EAAE;AAD6D,OAArB;AAAA;AAA1C;AALsC,CAAD,CAApD;AAWA,IAAMC,aAAa,GAAGvB,qBAAqB,CAAC;AAC1CwB,EAAAA,IAAI,EAAE;AAAEL,IAAAA,MAAM,EAAED;AAAV,GADoC;AAE1CO,EAAAA,IAAI,EAAE;AAAEN,IAAAA,MAAM,EAAEjB;AAAV;AAFoC,CAAD,CAA3C;AAKA,IAAMwB,YAAY,GAAG3B,kBAAkB,CAACwB,aAAD,CAAvC","sourcesContent":["import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './client/src/store/index'\nimport { Platform, StyleSheet, Text, View } from 'react-native';\nimport Constants  from 'expo-constants'\nimport * as Permissions from 'expo-permissions'\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\n\nimport { createStackNavigator } from 'react-navigation-stack';\n\nimport { Navbar, Link, Landing, Login, SignUp, BudgetSetup } from './client/src';\n\nasync function enablePushNotifs() {\n  if (!Constants.isDevice) {\n    return;\n  }\n  let { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n\n  if (status !== 'granted') {\n    return;\n  }\n}\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pageLoaded: false,\n    };\n  }\n\n  async componentDidMount() {\n    //await enablePushNotifs();\n    \n    this.setState({ pageLoaded: true });\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        {this.state.pageLoaded ? (\n          <AppNavigator />\n        ) : (\n        <View>\n          <Text style={{color: 'black'}}>Loading.......</Text>\n        </View>\n        )}\n      </Provider>\n    );\n  }\n}\n\nconst AuthenticationNavigator = createStackNavigator({\n  Landing: { screen: Landing},\n  Login: { screen: Login},\n  SignUp: { screen: SignUp },\n  Link: { screen: Link },\n  BudgetSetup: { screen: BudgetSetup, navigationOptions: ({ navigation }) => ({\n    headerShown: false\n  }) },\n /* EditCategories: { screen: EditCategories },*/\n});\n\nconst AppNavigator2 = createSwitchNavigator({\n  Auth: { screen: AuthenticationNavigator },\n  Main: { screen: Navbar }\n});\n\nconst AppNavigator = createAppContainer(AppNavigator2);"]},"metadata":{},"sourceType":"module"}