{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/bbridges11/Desktop/BackBurners/BackBurners/client/src/Components/Settings/index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createStackNavigator } from 'react-navigation-stack';\n\nvar Settings = function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings(props) {\n    _classCallCheck(this, Settings);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Settings, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.user;\n      return React.createElement(View, {\n        style: styles.settingsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.settingsView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../Images/Settings/Me.png\"),\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, '\\t' + '\\t'), \" Me\")), React.createElement(View, {\n        style: styles.settingsView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../Images/Settings/Notifications.png\"),\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, '\\t' + '\\t'), \"Notifications\")), React.createElement(View, {\n        style: styles.settingsView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../Images/Settings/Account.png\"),\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, '\\t' + '\\t'), \"Account\")), React.createElement(View, {\n        style: styles.settingsView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../Images/Settings/Help.png\"),\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, '\\t' + '\\t'), \"Help\")));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nvar styles = StyleSheet.create({\n  settingsContainer: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignItems: 'center'\n  },\n  settingsView: {\n    backgroundColor: '#F1FFF1',\n    height: 85,\n    marginBottom: 30,\n    justifyContent: 'center',\n    width: '90%'\n  },\n  image: {\n    height: 16,\n    width: 16\n  },\n  text: {\n    color: '#248841',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\n\nvar mapState = function mapState(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {};\n};\n\nvar SettingsConnect = connect(mapState, mapDispatch)(Settings);\nexport default SettingsConnect;\nexport var SettingsScreen = createStackNavigator({\n  Settings: {\n    screen: SettingsConnect\n  }\n});","map":{"version":3,"sources":["/Users/bbridges11/Desktop/BackBurners/BackBurners/client/src/Components/Settings/index.js"],"names":["React","Component","connect","createStackNavigator","Settings","props","user","styles","settingsContainer","settingsView","text","require","image","StyleSheet","create","flex","backgroundColor","alignItems","height","marginBottom","justifyContent","width","color","fontSize","fontWeight","mapState","state","mapDispatch","dispatch","SettingsConnect","SettingsScreen","screen"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;;AAEA,SAASC,oBAAT,QAAqC,wBAArC;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BACQ;AAAA,UACCC,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,gCAAtB;AAAwD,QAAA,KAAK,EAAEJ,MAAM,CAACK,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,OAAO,IAAd,CAFF,QADF,CADF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,2CAAtB;AAAmE,QAAA,KAAK,EAAEJ,MAAM,CAACK,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,OAAO,IAAd,CAFF,kBADF,CAPF,EAaE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,qCAAtB;AAA6D,QAAA,KAAK,EAAEJ,MAAM,CAACK,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,OAAO,IAAd,CAFF,YADF,CAbF,EAmBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,kCAAtB;AAA0D,QAAA,KAAK,EAAEJ,MAAM,CAACK,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,OAAO,IAAd,CAFF,SADF,CAnBF,CADF;AA4BD;;;;EAlCoBX,S;;AAqCvB,IAAMM,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,iBAAiB,EAAE;AACjBO,IAAAA,IAAI,EAAE,CADW;AAEjBC,IAAAA,eAAe,EAAE,SAFA;AAGjBC,IAAAA,UAAU,EAAE;AAHK,GADY;AAM/BR,EAAAA,YAAY,EAAE;AACZO,IAAAA,eAAe,EAAE,SADL;AAEZE,IAAAA,MAAM,EAAE,EAFI;AAGZC,IAAAA,YAAY,EAAE,EAHF;AAIZC,IAAAA,cAAc,EAAE,QAJJ;AAKZC,IAAAA,KAAK,EAAE;AALK,GANiB;AAa/BT,EAAAA,KAAK,EAAE;AACLM,IAAAA,MAAM,EAAE,EADH;AAELG,IAAAA,KAAK,EAAE;AAFF,GAbwB;AAkB/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAE;AAHR;AAlByB,CAAlB,CAAf;;AAyBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SAAO;AACLpB,IAAAA,IAAI,EAAEoB,KAAK,CAACpB;AADP,GAAP;AAGD,CAJD;;AAMA,IAAMqB,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAO,EAAP;AAGD,CAJD;;AAMA,IAAMC,eAAe,GAAG3B,OAAO,CAACuB,QAAD,EAAWE,WAAX,CAAP,CAA+BvB,QAA/B,CAAxB;AAEA,eAAeyB,eAAf;AAEA,OAAO,IAAMC,cAAc,GAAG3B,oBAAoB,CAAC;AAAEC,EAAAA,QAAQ,EAAE;AAAE2B,IAAAA,MAAM,EAAEF;AAAV;AAAZ,CAAD,CAA3C","sourcesContent":["\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Text, View, StyleSheet, Image } from 'react-native';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    const { user } = this.props\n    return(\n      <View style={styles.settingsContainer}>\n        <View style={styles.settingsView}>\n          <Text style={styles.text}>\n            <Image source={require('../../Images/Settings/Me.png')} style={styles.image}/>\n            <Text>{'\\t' + '\\t'}</Text> Me\n          </Text>\n        </View>\n        <View style={styles.settingsView}>\n          <Text style={styles.text}>\n            <Image source={require('../../Images/Settings/Notifications.png')} style={styles.image}/>\n            <Text>{'\\t' + '\\t'}</Text>Notifications\n          </Text>\n        </View>\n        <View style={styles.settingsView}>\n          <Text style={styles.text}>\n            <Image source={require('../../Images/Settings/Account.png')} style={styles.image}/>\n            <Text>{'\\t' + '\\t'}</Text>Account\n          </Text>\n        </View>\n        <View style={styles.settingsView}>\n          <Text style={styles.text}>\n            <Image source={require('../../Images/Settings/Help.png')} style={styles.image}/>\n            <Text>{'\\t' + '\\t'}</Text>Help\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  settingsContainer: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n  },\n  settingsView: {\n    backgroundColor: '#F1FFF1',\n    height: 85,\n    marginBottom: 30,\n    justifyContent: 'center',\n    width: '90%'\n  },\n  image: {\n    height: 16,\n    width: 16,\n    //paddingLeft: 10\n  },\n  text: {\n    color: '#248841',\n    fontSize: 18,\n    fontWeight: 'bold',\n  }\n})\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    \n  };\n};\n\nconst SettingsConnect = connect(mapState, mapDispatch)(Settings);\n\nexport default SettingsConnect;\n\nexport const SettingsScreen = createStackNavigator({ Settings: { screen: SettingsConnect }});"]},"metadata":{},"sourceType":"module"}