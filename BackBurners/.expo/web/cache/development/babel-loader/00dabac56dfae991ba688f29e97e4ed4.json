{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/bbridges11/Desktop/BackBurners/BackBurners/client/src/Components/Landing/Login.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { login } from \"../../store/user\";\nimport { bindActionCreators } from 'redux';\nimport { Notifications } from 'expo';\nvar height = Dimensions.get('screen').height;\n\nvar MailIcon = require(\"../../Images/MailIcon.png\");\n\nvar LockIcon = require(\"../../Images/LockIcon.png\");\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.showKB = function (event) {\n      Animated.timing(_this.imageHeight, {\n        duration: event.duration,\n        toValue: IMAGE_HEIGHT_SMALL\n      }).start();\n    };\n\n    _this.hideKB = function (event) {\n      Animated.timing(_this.imageHeight, {\n        duration: event.duration,\n        toValue: IMAGE_HEIGHT\n      }).start();\n    };\n\n    _this.handleSubmit = function _callee() {\n      var pushTok;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              alert('inside');\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n            case 3:\n              pushTok = _context.sent;\n\n              _this.props.login(_this.state.email, _this.state.password, _this.props.navigation, pushTok);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.showKBSub = Keyboard.addListener('showKB', this.showKB);\n      this.hideKBSub = Keyboard.addListener('hideKB', this.hideKB);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.showKBSub.remove();\n      this.hideKBSub.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: styles.signupSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.inputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: MailIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.text,\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(currtext) {\n          return _this2.setState({\n            email: currtext\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: LockIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.text,\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(currtext) {\n          return _this2.setState({\n            password: currtext\n          });\n        },\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.buttonview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: 0.6,\n        style: styles.button,\n        title: \"Link Bank Account \\u2192\",\n        onPress: function onPress() {\n          _this2.handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.buttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"Login\"))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar styles = StyleSheet.create({\n  signupSection: {\n    flex: 1,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: height,\n    marginTop: 60\n  },\n  inputField: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomWidth: 2,\n    borderBottomColor: '#248841',\n    height: 40,\n    margin: 10,\n    marginBottom: 60,\n    paddingBottom: 10\n  },\n  image: {\n    padding: 10,\n    margin: 5,\n    height: 20,\n    width: 20,\n    resizeMode: 'stretch',\n    alignItems: 'center'\n  },\n  text: {\n    flex: 1\n  },\n  buttontext: {\n    fontSize: 28,\n    textAlignVertical: 'center',\n    textAlign: 'center',\n    color: '#fff'\n  },\n  buttonview: {\n    justifyContent: \"center\",\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  button: {\n    width: 325,\n    height: 57,\n    backgroundColor: '#54C134',\n    justifyContent: \"center\",\n    alignSelf: \"stretch\",\n    textAlignVertical: \"center\",\n    borderRadius: 12\n  }\n});\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    login: login\n  }, dispatch);\n};\n\nexport default connect(null, mapDispatch)(Login);","map":{"version":3,"sources":["/Users/bbridges11/Desktop/BackBurners/BackBurners/client/src/Components/Landing/Login.js"],"names":["React","Component","connect","login","bindActionCreators","Notifications","height","Dimensions","get","MailIcon","require","LockIcon","Login","props","showKB","event","Animated","timing","imageHeight","duration","toValue","IMAGE_HEIGHT_SMALL","start","hideKB","IMAGE_HEIGHT","handleSubmit","alert","getExpoPushTokenAsync","pushTok","state","email","password","navigation","showKBSub","Keyboard","addListener","hideKBSub","remove","styles","signupSection","inputField","image","text","currtext","setState","buttonview","button","buttontext","StyleSheet","create","flex","position","top","left","right","marginTop","flexDirection","justifyContent","alignItems","borderBottomWidth","borderBottomColor","margin","marginBottom","paddingBottom","padding","width","resizeMode","fontSize","textAlignVertical","textAlign","color","backgroundColor","alignSelf","borderRadius","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Text, Dimensions, View, Image, TextInput, KeyboardAvoidingView, Animated, Keyboard, StyleSheet, TouchableOpacity } from 'react-native';\nimport { login } from '../../store/user'\nimport { bindActionCreators } from 'redux';\nimport { Notifications } from 'expo'\nconst height = Dimensions.get('screen').height\nconst MailIcon = require('../../Images/MailIcon.png')\nconst LockIcon = require('../../Images/LockIcon.png')\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    componentDidMount() {\n        this.showKBSub = Keyboard.addListener('showKB', this.showKB);\n        this.hideKBSub = Keyboard.addListener('hideKB', this.hideKB);\n    }\n    \n    componentWillUnmount() {\n        this.showKBSub.remove();\n        this.hideKBSub.remove();\n    }\n\n    showKB = event => {\n    Animated.timing(this.imageHeight, {\n        duration: event.duration,\n        toValue: IMAGE_HEIGHT_SMALL,\n    }).start();\n    };\n\n    hideKB = event => {\n    Animated.timing(this.imageHeight, {\n        duration: event.duration,\n        toValue: IMAGE_HEIGHT,\n    }).start();\n    };\n\n    handleSubmit = async () => {\n        //alert(this.state)\n        //if(this.state.email === '' || this.state.password === '') {\n            alert('inside')\n            let pushTok = await Notifications.getExpoPushTokenAsync();\n            this.props.login(this.state.email, this.state.password, this.props.navigation, pushTok);\n            //this.props.   \n        //}\n    }\n\n    render() {\n        return(\n            <KeyboardAvoidingView style={styles.signupSection}>\n                <View style={styles.inputField}>\n                    <Image style={styles.image} source={MailIcon}/>\n                    <TextInput style={styles.text}  placeholder=\"Email\" \n                    onChangeText={currtext => this.setState({ email: currtext })} value={this.state.email}/>\n                </View>\n                <View style={styles.inputField}>\n                    <Image style={styles.image} source={LockIcon}/>\n                    <TextInput style={styles.text} secureTextEntry={true} placeholder=\"Password\"\n                    onChangeText={currtext => this.setState({ password: currtext })} value={this.state.password}/>\n                </View>\n                <View style={styles.buttonview}>\n                    <TouchableOpacity activeOpacity={0.6} style={styles.button} title={`Link Bank Account →`} onPress={() => { this.handleSubmit() }}>\n                        <Text style={styles.buttontext}>Login</Text>\n                    </TouchableOpacity>\n                </View>\n            </KeyboardAvoidingView>\n        ); \n    }\n}\n\nconst styles = StyleSheet.create({\n    signupSection: {\n        flex:1,\n        //backgroundColor: '#ffffff',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        height: height,\n        marginTop: 60\n    },\n    inputField: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        //backgroundColor: '#fff',\n        borderBottomWidth: 2,\n        borderBottomColor: '#248841',\n        height: 40,\n        margin: 10,\n        marginBottom: 60,\n        paddingBottom: 10\n    },\n    image: {\n        padding: 10,\n        margin: 5,\n        height: 20,\n        width: 20,\n        resizeMode : 'stretch',\n        alignItems: 'center'\n    },\n    text: {\n        flex: 1\n    },\n    buttontext: {\n        fontSize: 28,\n        textAlignVertical: 'center',\n        textAlign: 'center',\n        color: '#fff'\n    },\n    buttonview: {\n        justifyContent: \"center\",\n        alignItems: 'center',\n        flexDirection: 'row',\n    },\n    button: {\n        width: 325,\n        height: 57,\n        backgroundColor: '#54C134',\n        justifyContent: \"center\",\n        alignSelf: \"stretch\",\n        textAlignVertical: \"center\",\n        borderRadius: 12\n    }\n})\n\nconst mapDispatch = dispatch => {\n    return bindActionCreators({\n        login\n    }, dispatch);\n};\n  \nexport default connect(null, mapDispatch)(Login);"]},"metadata":{},"sourceType":"module"}